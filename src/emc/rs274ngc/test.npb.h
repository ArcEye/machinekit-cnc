/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.3-dev at Mon Jan 29 16:29:52 2018. */

#ifndef PB_TEST_NPB_H_INCLUDED
#define PB_TEST_NPB_H_INCLUDED
#include <pb.h>

#include "emcclass.npb.h"
#include "nanopb.npb.h"
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _machinetalk_TestOpType {
    machinetalk_TestOpType_LINE = 10,
    machinetalk_TestOpType_CIRCLE = 20
} machinetalk_TestOpType;

/* Struct definitions */
typedef struct _machinetalk_Test2 {
    uint8_t dummy_field;
} machinetalk_Test2;

typedef struct _machinetalk_Test3 {
    uint8_t dummy_field;
} machinetalk_Test3;

typedef struct _machinetalk_Test1 {
    machinetalk_TestOpType op;
    machinetalk_EmcPose end;
    bool has_center;
    machinetalk_PmCartesian center;
    bool has_normal;
    machinetalk_PmCartesian normal;
    bool has_turn;
    int32_t turn;
} machinetalk_Test1;

/* Default values for struct fields */

/* Initializer values for message structs */
#define machinetalk_Test1_init_default           {(machinetalk_TestOpType)0, machinetalk_EmcPose_init_default, false, machinetalk_PmCartesian_init_default, false, machinetalk_PmCartesian_init_default, false, 0}
#define machinetalk_Test2_init_default           {0}
#define machinetalk_Test3_init_default           {0}
#define machinetalk_Test1_init_zero              {(machinetalk_TestOpType)0, machinetalk_EmcPose_init_zero, false, machinetalk_PmCartesian_init_zero, false, machinetalk_PmCartesian_init_zero, false, 0}
#define machinetalk_Test2_init_zero              {0}
#define machinetalk_Test3_init_zero              {0}

/* Field tags (for use in manual encoding/decoding) */
#define machinetalk_Test1_op_tag                 10
#define machinetalk_Test1_end_tag                20
#define machinetalk_Test1_center_tag             30
#define machinetalk_Test1_normal_tag             40
#define machinetalk_Test1_turn_tag               50

/* Struct field encoding specification for nanopb */
extern const pb_field_t machinetalk_Test1_fields[6];
extern const pb_field_t machinetalk_Test2_fields[1];
extern const pb_field_t machinetalk_Test3_fields[1];

/* Maximum encoded size of messages (where known) */
#define machinetalk_Test1_size                   (39 + machinetalk_EmcPose_size + machinetalk_PmCartesian_size + machinetalk_PmCartesian_size)
#define machinetalk_Test2_size                   0
#define machinetalk_Test3_size                   0

/* helper macros for message type ids if set with */
/* option (nanopb_msgopt).msgid = <id>; */

#ifdef PB_MSGID
#define PB_MSG_1300 machinetalk_Test1
#define PB_MSG_1301 machinetalk_Test2
#define PB_MSG_1302 machinetalk_Test3

#define TEST_MESSAGES \
	PB_MSG(1300,(39 + machinetalk_EmcPose_size + machinetalk_PmCartesian_size + machinetalk_PmCartesian_size),machinetalk_Test1) \
	PB_MSG(1301,0,machinetalk_Test2) \
	PB_MSG(1302,0,machinetalk_Test3) \

#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
