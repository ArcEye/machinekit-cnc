/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.3-dev at Mon Jan 29 16:29:52 2018. */

#ifndef PB_MOTCMDS_NPB_H_INCLUDED
#define PB_MOTCMDS_NPB_H_INCLUDED
#include <pb.h>

#include "emcclass.npb.h"
#include "nanopb.npb.h"
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _machinetalk_MotionType {
    machinetalk_MotionType__EMC_MOTION_TYPE_NONE = 0,
    machinetalk_MotionType__EMC_MOTION_TYPE_TRAVERSE = 1,
    machinetalk_MotionType__EMC_MOTION_TYPE_FEED = 2,
    machinetalk_MotionType__EMC_MOTION_TYPE_ARC = 3,
    machinetalk_MotionType__EMC_MOTION_TYPE_TOOLCHANGE = 4,
    machinetalk_MotionType__EMC_MOTION_TYPE_PROBING = 5,
    machinetalk_MotionType__EMC_MOTION_TYPE_INDEXROTARY = 6
} machinetalk_MotionType;

typedef enum _machinetalk_cmd_code_t {
    machinetalk_cmd_code_t_EMCMOT_ABORT = 4000,
    machinetalk_cmd_code_t_EMCMOT_AXIS_ABORT = 4001,
    machinetalk_cmd_code_t_EMCMOT_ENABLE = 4002,
    machinetalk_cmd_code_t_EMCMOT_DISABLE = 4003,
    machinetalk_cmd_code_t_EMCMOT_ENABLE_AMPLIFIER = 4004,
    machinetalk_cmd_code_t_EMCMOT_DISABLE_AMPLIFIER = 4005,
    machinetalk_cmd_code_t_EMCMOT_ENABLE_WATCHDOG = 4006,
    machinetalk_cmd_code_t_EMCMOT_DISABLE_WATCHDOG = 4007,
    machinetalk_cmd_code_t_EMCMOT_ACTIVATE_JOINT = 4008,
    machinetalk_cmd_code_t_EMCMOT_DEACTIVATE_JOINT = 4009,
    machinetalk_cmd_code_t_EMCMOT_PAUSE = 4010,
    machinetalk_cmd_code_t_EMCMOT_RESUME = 4011,
    machinetalk_cmd_code_t_EMCMOT_STEP = 4012,
    machinetalk_cmd_code_t_EMCMOT_FREE = 4013,
    machinetalk_cmd_code_t_EMCMOT_COORD = 4014,
    machinetalk_cmd_code_t_EMCMOT_TELEOP = 4015,
    machinetalk_cmd_code_t_EMCMOT_SPINDLE_SCALE = 4016,
    machinetalk_cmd_code_t_EMCMOT_SS_ENABLE = 4017,
    machinetalk_cmd_code_t_EMCMOT_FEED_SCALE = 4018,
    machinetalk_cmd_code_t_EMCMOT_FS_ENABLE = 4019,
    machinetalk_cmd_code_t_EMCMOT_FH_ENABLE = 4020,
    machinetalk_cmd_code_t_EMCMOT_AF_ENABLE = 4021,
    machinetalk_cmd_code_t_EMCMOT_OVERRIDE_LIMITS = 4022,
    machinetalk_cmd_code_t_EMCMOT_HOME = 4023,
    machinetalk_cmd_code_t_EMCMOT_UNHOME = 4024,
    machinetalk_cmd_code_t_EMCMOT_JOG_CONT = 4025,
    machinetalk_cmd_code_t_EMCMOT_JOG_INCR = 4026,
    machinetalk_cmd_code_t_EMCMOT_JOG_ABS = 4027,
    machinetalk_cmd_code_t_EMCMOT_SET_LINE = 4028,
    machinetalk_cmd_code_t_EMCMOT_SET_CIRCLE = 4029,
    machinetalk_cmd_code_t_EMCMOT_SET_TELEOP_VECTOR = 4030,
    machinetalk_cmd_code_t_EMCMOT_CLEAR_PROBE_FLAGS = 4031,
    machinetalk_cmd_code_t_EMCMOT_PROBE = 4032,
    machinetalk_cmd_code_t_EMCMOT_RIGID_TAP = 4033,
    machinetalk_cmd_code_t_EMCMOT_SET_POSITION_LIMITS = 4034,
    machinetalk_cmd_code_t_EMCMOT_SET_BACKLASH = 4035,
    machinetalk_cmd_code_t_EMCMOT_SET_MIN_FERROR = 4036,
    machinetalk_cmd_code_t_EMCMOT_SET_MAX_FERROR = 4037,
    machinetalk_cmd_code_t_EMCMOT_SET_VEL = 4038,
    machinetalk_cmd_code_t_EMCMOT_SET_VEL_LIMIT = 4039,
    machinetalk_cmd_code_t_EMCMOT_SET_JOINT_VEL_LIMIT = 4040,
    machinetalk_cmd_code_t_EMCMOT_SET_JOINT_ACC_LIMIT = 4041,
    machinetalk_cmd_code_t_EMCMOT_SET_ACC = 4042,
    machinetalk_cmd_code_t_EMCMOT_SET_TERM_COND = 4043,
    machinetalk_cmd_code_t_EMCMOT_SET_NUM_AXES = 4044,
    machinetalk_cmd_code_t_EMCMOT_SET_WORLD_HOME = 4045,
    machinetalk_cmd_code_t_EMCMOT_SET_HOMING_PARAMS = 4046,
    machinetalk_cmd_code_t_EMCMOT_SET_DEBUG = 4047,
    machinetalk_cmd_code_t_EMCMOT_SET_DOUT = 4048,
    machinetalk_cmd_code_t_EMCMOT_SET_AOUT = 4049,
    machinetalk_cmd_code_t_EMCMOT_SET_SPINDLESYNC = 4050,
    machinetalk_cmd_code_t_EMCMOT_SPINDLE_ON = 4051,
    machinetalk_cmd_code_t_EMCMOT_SPINDLE_OFF = 4052,
    machinetalk_cmd_code_t_EMCMOT_SPINDLE_INCREASE = 4053,
    machinetalk_cmd_code_t_EMCMOT_SPINDLE_DECREASE = 4054,
    machinetalk_cmd_code_t_EMCMOT_SPINDLE_BRAKE_ENGAGE = 4055,
    machinetalk_cmd_code_t_EMCMOT_SPINDLE_BRAKE_RELEASE = 4056,
    machinetalk_cmd_code_t_EMCMOT_SET_MOTOR_OFFSET = 4057,
    machinetalk_cmd_code_t_EMCMOT_SET_JOINT_COMP = 4058,
    machinetalk_cmd_code_t_EMCMOT_SET_OFFSET = 4059
} machinetalk_cmd_code_t;

typedef enum _machinetalk_cmd_status_t {
    machinetalk_cmd_status_t_EMCMOT_COMMAND_OK = 0,
    machinetalk_cmd_status_t_EMCMOT_COMMAND_UNKNOWN_COMMAND = 1,
    machinetalk_cmd_status_t_EMCMOT_COMMAND_INVALID_COMMAND = 2,
    machinetalk_cmd_status_t_EMCMOT_COMMAND_INVALID_PARAMS = 3,
    machinetalk_cmd_status_t_EMCMOT_COMMAND_BAD_EXEC = 4
} machinetalk_cmd_status_t;

/* Struct definitions */
typedef struct _machinetalk_MotionCommand {
    machinetalk_cmd_code_t command;
    uint32_t commandNum;
    bool has_motor_offset;
    double motor_offset;
    bool has_maxLimit;
    double maxLimit;
    bool has_minLimit;
    double minLimit;
    bool has_pos;
    machinetalk_EmcPose pos;
    bool has_center;
    machinetalk_PmCartesian center;
    bool has_normal;
    machinetalk_PmCartesian normal;
    bool has_turn;
    uint32_t turn;
    bool has_vel;
    double vel;
    bool has_ini_maxvel;
    double ini_maxvel;
    bool has_motion_type;
    machinetalk_MotionType motion_type;
    bool has_spindlesync;
    double spindlesync;
    bool has_acc;
    double acc;
    bool has_backlash;
    double backlash;
    bool has_id;
    uint32_t id;
    bool has_termCond;
    uint32_t termCond;
    bool has_tolerance;
    double tolerance;
    bool has_axis;
    uint32_t axis;
    bool has_scale;
    double scale;
    bool has_offset;
    double offset;
    bool has_home;
    double home;
    bool has_home_final_vel;
    double home_final_vel;
    bool has_search_vel;
    double search_vel;
    bool has_latch_vel;
    double latch_vel;
    bool has_flags;
    uint32_t flags;
    bool has_home_sequence;
    uint32_t home_sequence;
    bool has_volatile_home;
    uint32_t volatile_home;
    bool has_minFerror;
    double minFerror;
    bool has_maxFerror;
    double maxFerror;
    bool has_wdWait;
    uint32_t wdWait;
    bool has_debug;
    uint32_t debug;
    bool has_now;
    int32_t now;
    bool has_out;
    int32_t out;
    bool has_start;
    int32_t start;
    bool has_end;
    int32_t end;
    bool has_mode;
    int32_t mode;
    bool has_comp_nominal;
    double comp_nominal;
    bool has_comp_forward;
    double comp_forward;
    bool has_comp_reverse;
    double comp_reverse;
    bool has_probe_type;
    int32_t probe_type;
    bool has_tool_offset;
    machinetalk_EmcPose tool_offset;
} machinetalk_MotionCommand;

typedef struct _machinetalk_MotionStatus {
    machinetalk_cmd_code_t commandEcho;
    uint32_t commandNumEcho;
    machinetalk_cmd_status_t commandStatus;
    bool has_carte_pos_fb;
    machinetalk_EmcPose carte_pos_fb;
} machinetalk_MotionStatus;

/* Default values for struct fields */

/* Initializer values for message structs */
#define machinetalk_MotionCommand_init_default   {(machinetalk_cmd_code_t)0, 0, false, 0, false, 0, false, 0, false, machinetalk_EmcPose_init_default, false, machinetalk_PmCartesian_init_default, false, machinetalk_PmCartesian_init_default, false, 0, false, 0, false, 0, false, (machinetalk_MotionType)0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, machinetalk_EmcPose_init_default}
#define machinetalk_MotionStatus_init_default    {(machinetalk_cmd_code_t)0, 0, (machinetalk_cmd_status_t)0, false, machinetalk_EmcPose_init_default}
#define machinetalk_MotionCommand_init_zero      {(machinetalk_cmd_code_t)0, 0, false, 0, false, 0, false, 0, false, machinetalk_EmcPose_init_zero, false, machinetalk_PmCartesian_init_zero, false, machinetalk_PmCartesian_init_zero, false, 0, false, 0, false, 0, false, (machinetalk_MotionType)0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, machinetalk_EmcPose_init_zero}
#define machinetalk_MotionStatus_init_zero       {(machinetalk_cmd_code_t)0, 0, (machinetalk_cmd_status_t)0, false, machinetalk_EmcPose_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define machinetalk_MotionCommand_command_tag    10
#define machinetalk_MotionCommand_commandNum_tag 20
#define machinetalk_MotionCommand_motor_offset_tag 30
#define machinetalk_MotionCommand_maxLimit_tag   40
#define machinetalk_MotionCommand_minLimit_tag   50
#define machinetalk_MotionCommand_pos_tag        60
#define machinetalk_MotionCommand_center_tag     70
#define machinetalk_MotionCommand_normal_tag     80
#define machinetalk_MotionCommand_turn_tag       90
#define machinetalk_MotionCommand_vel_tag        100
#define machinetalk_MotionCommand_ini_maxvel_tag 110
#define machinetalk_MotionCommand_motion_type_tag 120
#define machinetalk_MotionCommand_spindlesync_tag 130
#define machinetalk_MotionCommand_acc_tag        140
#define machinetalk_MotionCommand_backlash_tag   150
#define machinetalk_MotionCommand_id_tag         160
#define machinetalk_MotionCommand_termCond_tag   170
#define machinetalk_MotionCommand_tolerance_tag  180
#define machinetalk_MotionCommand_axis_tag       190
#define machinetalk_MotionCommand_scale_tag      200
#define machinetalk_MotionCommand_offset_tag     210
#define machinetalk_MotionCommand_home_tag       220
#define machinetalk_MotionCommand_home_final_vel_tag 230
#define machinetalk_MotionCommand_search_vel_tag 240
#define machinetalk_MotionCommand_latch_vel_tag  250
#define machinetalk_MotionCommand_flags_tag      260
#define machinetalk_MotionCommand_home_sequence_tag 270
#define machinetalk_MotionCommand_volatile_home_tag 280
#define machinetalk_MotionCommand_minFerror_tag  290
#define machinetalk_MotionCommand_maxFerror_tag  300
#define machinetalk_MotionCommand_wdWait_tag     310
#define machinetalk_MotionCommand_debug_tag      320
#define machinetalk_MotionCommand_now_tag        330
#define machinetalk_MotionCommand_out_tag        340
#define machinetalk_MotionCommand_start_tag      350
#define machinetalk_MotionCommand_end_tag        360
#define machinetalk_MotionCommand_mode_tag       370
#define machinetalk_MotionCommand_comp_nominal_tag 380
#define machinetalk_MotionCommand_comp_forward_tag 390
#define machinetalk_MotionCommand_comp_reverse_tag 400
#define machinetalk_MotionCommand_probe_type_tag 410
#define machinetalk_MotionCommand_tool_offset_tag 420
#define machinetalk_MotionStatus_commandEcho_tag 10
#define machinetalk_MotionStatus_commandNumEcho_tag 20
#define machinetalk_MotionStatus_commandStatus_tag 30
#define machinetalk_MotionStatus_carte_pos_fb_tag 40

/* Struct field encoding specification for nanopb */
extern const pb_field_t machinetalk_MotionCommand_fields[43];
extern const pb_field_t machinetalk_MotionStatus_fields[5];

/* Maximum encoded size of messages (where known) */
#define machinetalk_MotionCommand_size           (373 + machinetalk_EmcPose_size + machinetalk_PmCartesian_size + machinetalk_PmCartesian_size + machinetalk_EmcPose_size)
#define machinetalk_MotionStatus_size            (26 + machinetalk_EmcPose_size)

/* helper macros for message type ids if set with */
/* option (nanopb_msgopt).msgid = <id>; */

#ifdef PB_MSGID
#define PB_MSG_600 machinetalk_MotionCommand
#define PB_MSG_601 machinetalk_MotionStatus

#define MOTCMDS_MESSAGES \
	PB_MSG(600,(373 + machinetalk_EmcPose_size + machinetalk_PmCartesian_size + machinetalk_PmCartesian_size + machinetalk_EmcPose_size),machinetalk_MotionCommand) \
	PB_MSG(601,(26 + machinetalk_EmcPose_size),machinetalk_MotionStatus) \

#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
