/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.3-dev at Mon Jan 29 16:29:52 2018. */

#ifndef PB_EMCCLASS_NPB_H_INCLUDED
#define PB_EMCCLASS_NPB_H_INCLUDED
#include <pb.h>

#include "nanopb.npb.h"
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _machinetalk_PmCartesian {
    bool has_x;
    double x;
    bool has_y;
    double y;
    bool has_z;
    double z;
} machinetalk_PmCartesian;

typedef struct _machinetalk_EmcPose {
    machinetalk_PmCartesian tran;
    bool has_a;
    double a;
    bool has_b;
    double b;
    bool has_c;
    double c;
    bool has_u;
    double u;
    bool has_v;
    double v;
    bool has_w;
    double w;
} machinetalk_EmcPose;

/* Default values for struct fields */

/* Initializer values for message structs */
#define machinetalk_PmCartesian_init_default     {false, 0, false, 0, false, 0}
#define machinetalk_EmcPose_init_default         {machinetalk_PmCartesian_init_default, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define machinetalk_PmCartesian_init_zero        {false, 0, false, 0, false, 0}
#define machinetalk_EmcPose_init_zero            {machinetalk_PmCartesian_init_zero, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define machinetalk_PmCartesian_x_tag            10
#define machinetalk_PmCartesian_y_tag            20
#define machinetalk_PmCartesian_z_tag            30
#define machinetalk_EmcPose_tran_tag             10
#define machinetalk_EmcPose_a_tag                20
#define machinetalk_EmcPose_b_tag                30
#define machinetalk_EmcPose_c_tag                40
#define machinetalk_EmcPose_u_tag                50
#define machinetalk_EmcPose_v_tag                60
#define machinetalk_EmcPose_w_tag                70

/* Struct field encoding specification for nanopb */
extern const pb_field_t machinetalk_PmCartesian_fields[4];
extern const pb_field_t machinetalk_EmcPose_fields[8];

/* Maximum encoded size of messages (where known) */
#define machinetalk_PmCartesian_size             29
#define machinetalk_EmcPose_size                 91

/* helper macros for message type ids if set with */
/* option (nanopb_msgopt).msgid = <id>; */

#ifdef PB_MSGID
#define PB_MSG_300 machinetalk_PmCartesian
#define PB_MSG_301 machinetalk_EmcPose

#define EMCCLASS_MESSAGES \
	PB_MSG(300,29,machinetalk_PmCartesian) \
	PB_MSG(301,91,machinetalk_EmcPose) \

#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
