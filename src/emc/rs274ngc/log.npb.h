/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.3-dev at Mon Jan 29 16:29:52 2018. */

#ifndef PB_LOG_NPB_H_INCLUDED
#define PB_LOG_NPB_H_INCLUDED
#include <pb.h>

#include "nanopb.npb.h"
#include "types.npb.h"
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _machinetalk_LogMessage {
    machinetalk_MsgOrigin origin;
    int32_t pid;
    machinetalk_MsgLevel level;
    pb_callback_t tag;
    pb_callback_t text;
} machinetalk_LogMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define machinetalk_LogMessage_init_default      {(machinetalk_MsgOrigin)0, 0, (machinetalk_MsgLevel)0, {{NULL}, NULL}, {{NULL}, NULL}}
#define machinetalk_LogMessage_init_zero         {(machinetalk_MsgOrigin)0, 0, (machinetalk_MsgLevel)0, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define machinetalk_LogMessage_origin_tag        10
#define machinetalk_LogMessage_pid_tag           20
#define machinetalk_LogMessage_level_tag         30
#define machinetalk_LogMessage_tag_tag           40
#define machinetalk_LogMessage_text_tag          50

/* Struct field encoding specification for nanopb */
extern const pb_field_t machinetalk_LogMessage_fields[6];

/* Maximum encoded size of messages (where known) */

/* helper macros for message type ids if set with */
/* option (nanopb_msgopt).msgid = <id>; */

#ifdef PB_MSGID
#define PB_MSG_400 machinetalk_LogMessage

#define LOG_MESSAGES \
	PB_MSG(400,-1,machinetalk_LogMessage) \

#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
