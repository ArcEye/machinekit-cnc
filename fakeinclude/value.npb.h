/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.3-dev at Mon Jan 29 16:29:52 2018. */

#ifndef PB_VALUE_NPB_H_INCLUDED
#define PB_VALUE_NPB_H_INCLUDED
#include <pb.h>

#include "nanopb.npb.h"
#include "emcclass.npb.h"
#include "types.npb.h"
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _machinetalk_Value {
    machinetalk_ValueType type;
    bool has_halbit;
    bool halbit;
    bool has_halfloat;
    double halfloat;
    bool has_hals32;
    int32_t hals32;
    bool has_halu32;
    uint32_t halu32;
    pb_callback_t v_bytes;
    bool has_v_int32;
    int32_t v_int32;
    bool has_v_int64;
    int64_t v_int64;
    bool has_v_uint32;
    uint32_t v_uint32;
    bool has_v_uint64;
    uint64_t v_uint64;
    bool has_v_double;
    double v_double;
    bool has_v_string;
    char v_string[41];
    bool has_v_bool;
    bool v_bool;
    bool has_carte;
    machinetalk_PmCartesian carte;
    bool has_pose;
    machinetalk_EmcPose pose;
} machinetalk_Value;

/* Default values for struct fields */

/* Initializer values for message structs */
#define machinetalk_Value_init_default           {(machinetalk_ValueType)0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, "", false, 0, false, machinetalk_PmCartesian_init_default, false, machinetalk_EmcPose_init_default}
#define machinetalk_Value_init_zero              {(machinetalk_ValueType)0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, "", false, 0, false, machinetalk_PmCartesian_init_zero, false, machinetalk_EmcPose_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define machinetalk_Value_type_tag               10
#define machinetalk_Value_halbit_tag             100
#define machinetalk_Value_halfloat_tag           101
#define machinetalk_Value_hals32_tag             102
#define machinetalk_Value_halu32_tag             103
#define machinetalk_Value_v_bytes_tag            120
#define machinetalk_Value_v_int32_tag            130
#define machinetalk_Value_v_int64_tag            140
#define machinetalk_Value_v_uint32_tag           150
#define machinetalk_Value_v_uint64_tag           160
#define machinetalk_Value_v_double_tag           170
#define machinetalk_Value_v_string_tag           180
#define machinetalk_Value_v_bool_tag             190
#define machinetalk_Value_carte_tag              200
#define machinetalk_Value_pose_tag               220

/* Struct field encoding specification for nanopb */
extern const pb_field_t machinetalk_Value_fields[16];

/* Maximum encoded size of messages (where known) */

/* helper macros for message type ids if set with */
/* option (nanopb_msgopt).msgid = <id>; */

#ifdef PB_MSGID
#define PB_MSG_1500 machinetalk_Value

#define VALUE_MESSAGES \
	PB_MSG(1500,-1,machinetalk_Value) \

#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
